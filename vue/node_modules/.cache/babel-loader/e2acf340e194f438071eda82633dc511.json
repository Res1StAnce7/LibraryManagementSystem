{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/request\";\nimport Cookies from 'js-cookie';\nexport default {\n  name: 'AdminList',\n\n  data() {\n    return {\n      admin: Cookies.get('admin') ? JSON.parse(Cookies.get('admin')) : {},\n      tableData: [],\n      total: 0,\n      form: {},\n      dialogFormVisible: false,\n      params: {\n        pageNum: 1,\n        pageSize: 10,\n        username: '',\n        phone: '',\n        email: ''\n      },\n      rules: {\n        newPass: [{\n          required: true,\n          message: 'New Password',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: 'Length should between 3 and 10',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  created() {\n    this.load();\n  },\n\n  methods: {\n    changeStatus(row) {\n      if (this.admin.id === row.id && !row.status) {\n        row.status = true;\n        this.$notify.warning('Illegal operation');\n        return;\n      }\n\n      request.put('/admin/update', row).then(res => {\n        if (res.code === '200') {\n          this.$notify.success('Successful operation');\n          this.load();\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n\n    handleChangePass(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.dialogFormVisible = true;\n    },\n\n    savePass() {\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          request.put('/admin/password', this.form).then(res => {\n            if (res.code === '200') {\n              this.$notify.success(\"Successful operation\");\n\n              if (this.form.id === this.admin.id) {\n                Cookies.remove('admin');\n                this.$router.push('/login');\n              } else {\n                this.load();\n                this.dialogFormVisible = false;\n              }\n            } else {\n              this.$notify.error(\"Failed to change password\");\n            }\n          });\n        }\n      });\n    },\n\n    load() {\n      request.get('/admin/page', {\n        params: this.params\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        }\n      });\n    },\n\n    reset() {\n      this.params = {\n        pageNum: 1,\n        pageSize: 10,\n        username: '',\n        phone: '',\n        email: ''\n      };\n      this.load();\n    },\n\n    handleCurrentChange(pageNum) {\n      this.params.pageNum = pageNum;\n      this.load();\n    },\n\n    del(id) {\n      request.delete(\"/admin/delete/\" + id).then(res => {\n        if (res.code === '200') {\n          this.$notify.success('Successful operation');\n          this.load();\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAsEA;AACA;AAEA;EACAA,iBADA;;EAEAC;IACA;MACAC,mEADA;MAEAC,aAFA;MAGAC,QAHA;MAIAC,QAJA;MAKAC,wBALA;MAMAC;QACAC,UADA;QAEAC,YAFA;QAGAC,YAHA;QAIAC,SAJA;QAKAC;MALA,CANA;MAaAC;QACAC,UACA;UAAAC;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA;MADA;IAbA;EAoBA,CAvBA;;EAwBAG;IACA;EACA,CA1BA;;EA2BAC;IACAC;MACA;QACAC;QACA;QACA;MACA;;MACAC;QACA;UACA;UACA;QACA,CAHA,MAGA;UACA;QACA;MACA,CAPA;IAQA,CAfA;;IAgBAC;MACA;MACA;IACA,CAnBA;;IAoBAC;MACA;QACA;UACAF;YACA;cACA;;cACA;gBACAG;gBACA;cACA,CAHA,MAGA;gBACA;gBACA;cACA;YACA,CATA,MASA;cACA;YACA;UACA,CAbA;QAcA;MACA,CAjBA;IAkBA,CAvCA;;IAwCAC;MACAJ;QACAjB;MADA,GAEAsB,IAFA,CAEAC;QACA;UACA;UACA;QACA;MACA,CAPA;IAQA,CAjDA;;IAkDAC;MACA;QACAvB,UADA;QAEAC,YAFA;QAGAC,YAHA;QAIAC,SAJA;QAKAC;MALA;MAOA;IACA,CA3DA;;IA4DAoB;MACA;MACA;IACA,CA/DA;;IAgEAC;MACAT;QACA;UACA;UACA;QACA,CAHA,MAGA;UACA;QACA;MACA,CAPA;IAQA;;EAzEA;AA3BA","names":["name","data","admin","tableData","total","form","dialogFormVisible","params","pageNum","pageSize","username","phone","email","rules","newPass","required","message","trigger","min","max","created","methods","changeStatus","row","request","handleChangePass","savePass","Cookies","load","then","res","reset","handleCurrentChange","del"],"sourceRoot":"src/views/admin","sources":["List.vue"],"sourcesContent":["<template>\n  <div>\n    <!--    Search List-->\n    <div style=\"margin-bottom: 20px\">\n      <el-input style=\"width: 240px\" placeholder=\"Username\" v-model=\"params.username\"></el-input>\n      <el-input style=\"width: 240px; margin-left: 5px\" placeholder=\"Phone\" v-model=\"params.phone\"></el-input>\n      <el-input style=\"width: 240px; margin-left: 5px\" placeholder=\"Email\" v-model=\"params.email\"></el-input>\n      <el-button style=\"margin-left: 5px\" type=\"primary\" @click=\"load\"><i class=\"el-icon-search\"></i> Search</el-button>\n      <el-button style=\"margin-left: 5px\" type=\"warning\" @click=\"reset\"><i class=\"el-icon-refresh\"></i> Reset</el-button>\n    </div>\n\n    <el-table :data=\"tableData\" stripe empty-text=\" \">\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n      <el-table-column prop=\"username\" label=\"Username\"></el-table-column>\n      <el-table-column prop=\"phone\" label=\"Phone\"></el-table-column>\n      <el-table-column prop=\"email\" label=\"Email\"></el-table-column>\n      <el-table-column prop=\"createtime\" label=\"Time of Creation\"></el-table-column>\n      <el-table-column prop=\"updatetime\" label=\"Time of Update\"></el-table-column>\n      <el-table-column label=\"Status\" width=\"230\">\n        <template v-slot=\"scope\">\n          <el-switch\n              v-model=\"scope.row.status\"\n              @change=\"changeStatus(scope.row)\"\n              active-color=\"#13ce66\"\n              inactive-color=\"#ff4949\">\n          </el-switch>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Operation\" width=\"230\">\n        <template v-slot=\"scope\">\n          <el-button type=\"primary\" @click=\"$router.push('/editAdmin?id=' + scope.row.id)\">Edit</el-button>\n          <el-popconfirm\n              style=\"margin-left: 5px\"\n              title=\"Are you sure to delete this admin?\"\n              @confirm=\"del(scope.row.id)\"\n          >\n            <el-button type=\"danger\" slot=\"reference\">Delete</el-button>\n          </el-popconfirm>\n          <el-button style=\"margin-left: 10px\" type=\"warning\" @click=\"handleChangePass(scope.row)\">Change Password</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!--    Subpage-->\n    <div style=\"margin-top: 20px\">\n      <el-pagination\n          background\n          :current-page=\"params.pageNum\"\n          :page-size=\"params.pageSize\"\n          layout=\"prev, pager, next\"\n          @current-change=\"handleCurrentChange\"\n          :total=\"total\">\n      </el-pagination>\n    </div>\n\n    <el-dialog title=\"Change Password\" :visible.sync=\"dialogFormVisible\" width=\"30%\">\n      <el-form :model=\"form\" label-width=\"100px\" ref=\"formRef\" :rules=\"rules\">\n        <el-form-item label=\"New Password\" prop=\"newPass\">\n          <el-input v-model=\"form.newPass\" autocomplete=\"off\" show-password></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">Cancel</el-button>\n        <el-button type=\"primary\" @click=\"savePass\">Confirm</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\nimport Cookies from 'js-cookie'\n\nexport default {\n  name: 'AdminList',\n  data() {\n    return {\n      admin: Cookies.get('admin') ? JSON.parse(Cookies.get('admin')) : {},\n      tableData: [],\n      total: 0,\n      form: {},\n      dialogFormVisible: false,\n      params: {\n        pageNum: 1,\n        pageSize: 10,\n        username: '',\n        phone: '',\n        email: ''\n      },\n      rules: {\n        newPass: [\n          {required: true, message: 'New Password', trigger: 'blur'},\n          {min: 3, max: 10, message: 'Length should between 3 and 10', trigger: 'blur'}\n        ]\n      }\n    }\n  },\n  created() {\n    this.load()\n  },\n  methods: {\n    changeStatus(row) {\n      if (this.admin.id === row.id && !row.status) {\n        row.status = true\n        this.$notify.warning('Illegal operation')\n        return\n      }\n      request.put('/admin/update', row).then(res => {\n        if (res.code === '200') {\n          this.$notify.success('Successful operation')\n          this.load()\n        } else {\n          this.$notify.error(res.msg)\n        }\n      })\n    },\n    handleChangePass(row) {\n      this.form = JSON.parse(JSON.stringify(row))\n      this.dialogFormVisible = true\n    },\n    savePass() {\n      this.$refs['formRef'].validate((valid) => {\n        if (valid) {\n          request.put('/admin/password', this.form).then(res => {\n            if (res.code === '200') {\n              this.$notify.success(\"Successful operation\")\n              if (this.form.id === this.admin.id) {\n                Cookies.remove('admin')\n                this.$router.push('/login')\n              } else {\n                this.load()\n                this.dialogFormVisible = false\n              }\n            } else {\n              this.$notify.error(\"Failed to change password\")\n            }\n          })\n        }\n      })\n    },\n    load() {\n      request.get('/admin/page', {\n        params: this.params\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data.list\n          this.total = res.data.total\n        }\n      })\n    },\n    reset() {\n      this.params = {\n        pageNum: 1,\n        pageSize: 10,\n        username: '',\n        phone: '',\n        email: ''\n      }\n      this.load()\n    },\n    handleCurrentChange(pageNum) {\n      this.params.pageNum = pageNum\n      this.load()\n    },\n    del(id) {\n      request.delete(\"/admin/delete/\" + id).then(res => {\n        if (res.code === '200') {\n          this.$notify.success('Successful operation')\n          this.load()\n        } else {\n          this.$notify.error(res.msg)\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}