{"ast":null,"code":"import request from \"@/utils/request\";\nimport Cookies from 'js-cookie';\nexport default {\n  name: 'CategoryList',\n\n  data() {\n    return {\n      admin: Cookies.get('admin') ? JSON.parse(Cookies.get('admin')) : {},\n      tableData: [],\n      total: 0,\n      dialogFormVisible: false,\n      form: {},\n      pid: null,\n      params: {\n        pageNum: 1,\n        pageSize: 10,\n        name: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: 'Category Name',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  created() {\n    this.load();\n  },\n\n  methods: {\n    load() {\n      request.get('/category/page', {\n        params: this.params\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        }\n      });\n    },\n\n    reset() {\n      this.params = {\n        pageNum: 1,\n        pageSize: 10,\n        name: ''\n      };\n      this.load();\n    },\n\n    handleCurrentChange(pageNum) {\n      this.params.pageNum = pageNum;\n      this.load();\n    },\n\n    del(id) {\n      request.delete(\"/category/delete/\" + id).then(res => {\n        if (res.code === '200') {\n          this.$notify.success('Delete successfully');\n          this.load();\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n\n    handleAdd(row) {\n      this.pid = row.id;\n      this.dialogFormVisible = true;\n    },\n\n    save() {\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          this.form.pid = this.pid;\n          request.post('/category/save', this.form).then(res => {\n            if (res.code === '200') {\n              this.$notify.success('Add successfully');\n              this.$refs['ruleForm'].resetFields();\n              this.dialogFormVisible = false;\n              this.load();\n            } else {\n              this.$notify.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2DA;AACA;AAEA;EACAA,oBADA;;EAEAC;IACA;MACAC,mEADA;MAEAC,aAFA;MAGAC,QAHA;MAIAC,wBAJA;MAKAC,QALA;MAMAC,SANA;MAOAC;QACAC,UADA;QAEAC,YAFA;QAGAV;MAHA,CAPA;MAYAW;QACAX,OACA;UAAAY;UAAAC;UAAAC;QAAA,CADA;MADA;IAZA;EAkBA,CArBA;;EAsBAC;IACA;EACA,CAxBA;;EAyBAC;IACAC;MACAC;QACAV;MADA,GAEAW,IAFA,CAEAC;QACA;UACA;UACA;QACA;MACA,CAPA;IAQA,CAVA;;IAWAC;MACA;QACAZ,UADA;QAEAC,YAFA;QAGAV;MAHA;MAKA;IACA,CAlBA;;IAmBAsB;MACA;MACA;IACA,CAtBA;;IAuBAC;MACAL;QACA;UACA;UACA;QACA,CAHA,MAGA;UACA;QACA;MACA,CAPA;IAQA,CAhCA;;IAiCAM;MACA;MACA;IACA,CApCA;;IAqCAC;MACA;QACA;UACA;UACAP;YACA;cACA;cACA;cACA;cACA;YACA,CALA,MAKA;cACA;YACA;UACA,CATA;QAUA;MACA,CAdA;IAeA;;EArDA;AAzBA","names":["name","data","admin","tableData","total","dialogFormVisible","form","pid","params","pageNum","pageSize","rules","required","message","trigger","created","methods","load","request","then","res","reset","handleCurrentChange","del","handleAdd","save"],"sourceRoot":"src/views/category","sources":["List.vue"],"sourcesContent":["<template>\n  <div>\n    <!--    Search List-->\n    <div style=\"margin-bottom: 20px\">\n      <el-input style=\"width: 240px\" placeholder=\"Category Name\" v-model=\"params.name\"></el-input>\n      <el-button style=\"margin-left: 5px\" type=\"primary\" @click=\"load\"><i class=\"el-icon-search\"></i> Search</el-button>\n      <el-button style=\"margin-left: 5px\" type=\"warning\" @click=\"reset\"><i class=\"el-icon-refresh\"></i> Reset</el-button>\n    </div>\n\n    <el-table :data=\"tableData\" stripe row-key=\"id\" empty-text=\" \" default-expand-all>\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n      <el-table-column prop=\"name\" label=\"Name\"></el-table-column>\n      <el-table-column prop=\"remark\" label=\"Comment\"></el-table-column>\n      <el-table-column prop=\"createtime\" label=\"Time of Creation\"></el-table-column>\n      <el-table-column prop=\"updatetime\" label=\"Time of Update\"></el-table-column>\n      <el-table-column label=\"Operation\" width=\"280\">\n        <template v-slot=\"scope\">\n          <el-button type=\"success\" v-if=\"!scope.row.pid\" @click=\"handleAdd(scope.row)\">Add Sub Category</el-button>\n          <el-button type=\"primary\" @click=\"$router.push('/editCategory?id=' + scope.row.id)\">Edit</el-button>\n          <el-popconfirm\n              title=\"Are you sure to delete this category? \"\n              @confirm=\"del(scope.row.id)\">\n            <el-button type=\"danger\" slot=\"reference\" style=\"margin-top: 10px; margin-left: 0\">Delete</el-button>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!--    Subpage-->\n    <div style=\"margin-top: 20px\">\n      <el-pagination\n          background\n          :current-page=\"params.pageNum\"\n          :page-size=\"params.pageSize\"\n          layout=\"prev, pager, next\"\n          @current-change=\"handleCurrentChange\"\n          :total=\"total\">\n      </el-pagination>\n    </div>\n\n    <el-dialog title=\"Add Sub Category\" :visible.sync=\"dialogFormVisible\" width=\"30%\">\n      <el-form :model=\"form\" label-width=\"100px\" ref=\"ruleForm\" :rules=\"rules\" style=\"width: 85%\">\n        <el-form-item label=\"Category Name\" prop=\"name\">\n          <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Category Comment\" prop=\"remark\">\n          <el-input v-model=\"form.remark\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">Cancel</el-button>\n        <el-button type=\"primary\" @click=\"save\">Confirm</el-button>\n      </div>\n    </el-dialog>\n    \n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\nimport Cookies from 'js-cookie'\n\nexport default {\n  name: 'CategoryList',\n  data() {\n    return {\n      admin: Cookies.get('admin') ? JSON.parse(Cookies.get('admin')) : {},\n      tableData: [],\n      total: 0,\n      dialogFormVisible: false,\n      form: {},\n      pid: null,\n      params: {\n        pageNum: 1,\n        pageSize: 10,\n        name: '',\n      },\n      rules: {\n        name: [\n          {required: true, message: 'Category Name', trigger: 'blur'}\n        ]\n      }\n    }\n  },\n  created() {\n    this.load()\n  },\n  methods: {\n    load() {\n      request.get('/category/page', {\n        params: this.params\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data.list\n          this.total = res.data.total\n        }\n      })\n    },\n    reset() {\n      this.params = {\n        pageNum: 1,\n        pageSize: 10,\n        name: ''\n      }\n      this.load()\n    },\n    handleCurrentChange(pageNum) {\n      this.params.pageNum = pageNum\n      this.load()\n    },\n    del(id) {\n      request.delete(\"/category/delete/\" + id).then(res => {\n        if (res.code === '200') {\n          this.$notify.success('Delete successfully')\n          this.load()\n        } else {\n          this.$notify.error(res.msg)\n        }\n      })\n    },\n    handleAdd(row) {\n      this.pid = row.id\n      this.dialogFormVisible = true\n    },\n    save() {\n      this.$refs['ruleForm'].validate((valid) => {\n        if (valid) {\n          this.form.pid = this.pid\n          request.post('/category/save', this.form).then(res => {\n            if (res.code === '200') {\n              this.$notify.success('Add successfully')\n              this.$refs['ruleForm'].resetFields()\n              this.dialogFormVisible = false\n              this.load()\n            } else {\n              this.$notify.error(res.msg)\n            }\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.className :empty::before {\n  content: \" \";\n}\n</style>"]},"metadata":{},"sourceType":"module"}