{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport request from \"@/utils/request\";\nexport default {\n  name: 'User',\n\n  data() {\n    const checkNums = (rule, value, callback) => {\n      value = parseInt(value);\n\n      if (value < 10 || value > 200) {\n        callback(new Error('Score must be between 10 and 200'));\n      }\n\n      callback();\n    };\n\n    return {\n      tableData: [],\n      total: 0,\n      params: {\n        pageNum: 1,\n        pageSize: 10,\n        name: '',\n        phone: ''\n      },\n      dialogFormVisible: false,\n      form: {},\n      rules: {\n        score: [{\n          required: true,\n          message: 'Input the score',\n          trigger: 'blur'\n        }, {\n          validator: checkNums,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  created() {\n    this.load();\n  },\n\n  methods: {\n    changeStatus(row) {\n      request.put('/user/update', row).then(res => {\n        if (res.code === '200') {\n          this.$notify.success('Operation successful');\n          this.load();\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n\n    load() {\n      // fetch('http://localhost:9090/user/list').then(res => res.json()).then(res => {\n      //   console.log(res)\n      //   this.tableData = res\n      // })\n      request.get('/user/page', {\n        params: this.params\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data.list;\n          this.total = res.data.total;\n        }\n      });\n    },\n\n    reset() {\n      this.params = {\n        pageNum: 1,\n        pageSize: 10,\n        name: '',\n        phone: ''\n      };\n      this.load();\n    },\n\n    handleCurrentChange(pageNum) {\n      this.params.pageNum = pageNum;\n      this.load();\n    },\n\n    del(id) {\n      request.delete(\"/user/delete/\" + id).then(res => {\n        if (res.code === '200') {\n          this.$notify.success('Operation successful');\n          this.load();\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n\n    handleAccountAdd(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.dialogFormVisible = true;\n    },\n\n    addAccount() {\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          request.post('/user/account', this.form).then(res => {\n            if (res.code === '200') {\n              this.$notify.success('Operation successful');\n              this.dialogFormVisible = false;\n              this.load();\n            } else {\n              this.$notify.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":";AA6EA;AAEA;EACAA,YADA;;EAEAC;IACA;MACAC;;MACA;QACAC;MACA;;MACAA;IACA,CANA;;IAOA;MACAC,aADA;MAEAC,QAFA;MAGAC;QACAC,UADA;QAEAC,YAFA;QAGAR,QAHA;QAIAS;MAJA,CAHA;MASAC,wBATA;MAUAC,QAVA;MAWAC;QACAC,QACA;UAAAC;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAD;QAAA,CAFA;MADA;IAXA;EAkBA,CA5BA;;EA6BAE;IACA;EACA,CA/BA;;EAgCAC;IACAC;MACAC;QACA;UACA;UACA;QACA,CAHA,MAGA;UACA;QACA;MACA,CAPA;IAQA,CAVA;;IAWAC;MACA;MACA;MACA;MACA;MAEAD;QACAf;MADA,GAEAiB,IAFA,CAEAC;QACA;UACA;UACA;QACA;MACA,CAPA;IAQA,CAzBA;;IA0BAC;MACA;QACAlB,UADA;QAEAC,YAFA;QAGAR,QAHA;QAIAS;MAJA;MAMA;IACA,CAlCA;;IAmCAiB;MACA;MACA;IACA,CAtCA;;IAuCAC;MACAN;QACA;UACA;UACA;QACA,CAHA,MAGA;UACA;QACA;MACA,CAPA;IAQA,CAhDA;;IAiDAO;MACA;MACA;IACA,CApDA;;IAqDAC;MACA;QACA;UACAR;YACA;cACA;cACA;cACA;YACA,CAJA,MAIA;cACA;YACA;UACA,CARA;QASA;MACA,CAZA;IAaA;;EAnEA;AAhCA","names":["name","data","value","callback","tableData","total","params","pageNum","pageSize","phone","dialogFormVisible","form","rules","score","required","message","trigger","validator","created","methods","changeStatus","request","load","then","res","reset","handleCurrentChange","del","handleAccountAdd","addAccount"],"sourceRoot":"src/views/user","sources":["User.vue"],"sourcesContent":["<template>\n  <div>\n    <div style=\"margin-bottom: 20px\">\n      <el-input style=\"width: 240px\" placeholder=\"Input your name\" v-model=\"params.name\"></el-input>\n      <el-input style=\"width: 240px; margin-left: 5px\" placeholder=\"Input your contact information\" v-model=\"params.phone\"></el-input>\n      <el-button style=\"margin-left: 5px\" type=\"primary\" @click=\"load\"><i class=\"el-icon-search\"></i> Search</el-button>\n      <el-button style=\"margin-left: 5px\" type=\"warning\" @click=\"reset\"><i class=\"el-icon-refresh\"></i> Rest</el-button>\n    </div>\n\n    <el-table :data=\"tableData\" stripe>\n      <el-table-column prop=\"id\" label=\"id\" width=\"80\"></el-table-column>\n      <el-table-column prop=\"username\" label=\"Username\"></el-table-column>\n      <el-table-column prop=\"name\" label=\"Name\"></el-table-column>\n      <el-table-column prop=\"age\" label=\"Age\"></el-table-column>\n      <el-table-column prop=\"address\" label=\"Address\"></el-table-column>\n      <el-table-column prop=\"phone\" label=\"Contact\"></el-table-column>\n      <el-table-column prop=\"Gender\" label=\"Gender\"></el-table-column>\n      <el-table-column prop=\"account\" label=\"Score\"></el-table-column>\n      <el-table-column label=\"Status\" width=\"230\">\n        <template v-slot=\"scope\">\n          <el-switch\n              v-model=\"scope.row.status\"\n              @change=\"changeStatus(scope.row)\"\n              active-color=\"#13ce66\"\n              inactive-color=\"#ff4949\">\n          </el-switch>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"createTime\" label=\"Time of Creation\" width=\"230\"></el-table-column>\n      <el-table-column prop=\"updateTime\" label=\"Time of Update\"></el-table-column>\n\n      <el-table-column label=\"Operation\" width=\"230\">\n        <template v-slot=\"scope\">\n          <el-button type=\"warning\" @click=\"handleAccountAdd(scope.row)\">Recharge</el-button>\n          <el-button type=\"primary\" @click=\"$router.push('/editUser?id=' + scope.row.id)\">Edit</el-button>\n          <el-popconfirm\n              style=\"margin-left: 5px\"\n              title=\"Are you sure to delete this user?\"\n              @confirm=\"del(scope.row.id)\"\n          >\n            <el-button type=\"danger\" slot=\"reference\">Delete</el-button>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!--    Subpage-->\n    <div style=\"margin-top: 20px\">\n      <el-pagination\n          background\n          :current-page=\"params.pageNum\"\n          :page-size=\"params.pageSize\"\n          layout=\"prev, pager, next\"\n          @current-change=\"handleCurrentChange\"\n          :total=\"total\">\n      </el-pagination>\n    </div>\n\n    <el-dialog title=\"Recharge\" :visible.sync=\"dialogFormVisible\" width=\"30%\">\n      <el-form :model=\"form\" label-width=\"100px\" ref=\"ruleForm\" :rules=\"rules\" style=\"width: 85%\">\n        <el-form-item label=\"Current Score\" prop=\"account\">\n          <el-input disabled v-model=\"form.account\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Score\" prop=\"score\">\n          <el-input v-model=\"form.score\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">Cancel</el-button>\n        <el-button type=\"primary\" @click=\"addAccount\">Confirm</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  name: 'User',\n  data() {\n    const checkNums = (rule, value, callback) => {\n      value = parseInt(value)\n      if (value < 10 || value > 200) {\n        callback(new Error('Score must be between 10 and 200'));\n      }\n      callback()\n    };\n    return {\n      tableData: [],\n      total: 0,\n      params: {\n        pageNum: 1,\n        pageSize: 10,\n        name: '',\n        phone: ''\n      },\n      dialogFormVisible: false,\n      form: {},\n      rules: {\n        score: [\n          { required: true, message: 'Input the score', trigger: 'blur'},\n          { validator: checkNums, trigger: 'blur'}\n        ]\n      }\n    }\n  },\n  created() {\n    this.load()\n  },\n  methods: {\n    changeStatus(row) {\n      request.put('/user/update', row).then(res => {\n        if (res.code === '200') {\n          this.$notify.success('Operation successful')\n          this.load()\n        } else {\n          this.$notify.error(res.msg)\n        }\n      })\n    },\n    load() {\n      // fetch('http://localhost:9090/user/list').then(res => res.json()).then(res => {\n      //   console.log(res)\n      //   this.tableData = res\n      // })\n\n      request.get('/user/page', {\n        params: this.params\n      }).then(res => {\n        if (res.code === '200') {\n          this.tableData = res.data.list\n          this.total = res.data.total\n        }\n      })\n    },\n    reset() {\n      this.params = {\n        pageNum: 1,\n        pageSize: 10,\n        name: '',\n        phone: ''\n      }\n      this.load()\n    },\n    handleCurrentChange(pageNum) {\n      this.params.pageNum = pageNum\n      this.load()\n    },\n    del(id) {\n      request.delete(\"/user/delete/\" + id).then(res => {\n        if (res.code === '200') {\n          this.$notify.success('Operation successful')\n          this.load()\n        } else {\n          this.$notify.error(res.msg)\n        }\n      })\n    },\n    handleAccountAdd(row) {\n      this.form = JSON.parse(JSON.stringify(row))\n      this.dialogFormVisible = true\n    },\n    addAccount() {\n      this.$refs['ruleForm'].validate((valid) => {\n        if (valid) {\n          request.post('/user/account', this.form).then(res => {\n            if (res.code === '200') {\n              this.$notify.success('Operation successful')\n              this.dialogFormVisible = false\n              this.load()\n            } else {\n              this.$notify.error(res.msg)\n            }\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}